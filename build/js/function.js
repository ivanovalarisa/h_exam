"use strict";function _createForOfIteratorHelper(t){if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(t=_unsupportedIterableToArray(t))){var e=0,a=function(){};return{s:a,n:function(){return e>=t.length?{done:!0}:{done:!1,value:t[e++]}},e:function(t){throw t},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,r,o=!0,i=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return o=t.done,t},e:function(t){i=!0,r=t},f:function(){try{o||null==n.return||n.return()}finally{if(i)throw r}}}}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray(t,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var a=Object.prototype.toString.call(t).slice(8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?Array.from(a):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var a=0,n=new Array(e);a<e;a++)n[a]=t[a];return n}function _iterableToArrayLimit(t,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t)){var a=[],n=!0,r=!1,o=void 0;try{for(var i,c=t[Symbol.iterator]();!(n=(i=c.next()).done)&&(a.push(i.value),!e||a.length!==e);n=!0);}catch(t){r=!0,o=t}finally{try{n||null==c.return||c.return()}finally{if(r)throw o}}return a}}function _arrayWithHoles(t){if(Array.isArray(t))return t}var getDataFromServer=function(){return fetch("../data.json").then(function(t){return t.json()}).then(function(t){return pushObjToLocalStorage(t),t})},pushObjToLocalStorage=function(t){localStorage.getItem("dataGoods")&&getDataFromLocalStorage(),localStorage.setItem("dataGoods",JSON.stringify(t))},getDataFromLocalStorage=function(){return JSON.parse(localStorage.getItem("dataGoods"))},dataObj=getDataFromLocalStorage();function displayProduct(o,i){for(var t in dataObj)if(t===o)for(var e=function(){var t=_slicedToArray(n[a],2),r=t[0];t[1].forEach(function(t,e,a){if(Object.entries(t)[0][1]===i){var n=a[e].quantity;document.getElementById("name-odj").insertAdjacentHTML("afterbegin","\n                                <h3>".concat(a[e].name,"</h3>\n                                <h2>$").concat(a[e].price,'</h2>\n                                <ul class="list" id="list">\n                                    <li><a><span>Category</span> :  ').concat(r,"</a></li>\n                                    <li><a><span>Brand</span> : ").concat(a[e].brand,"</a></li>\n                                    <li><a><span>Color</span> : ").concat(a[e].color,"</a></li>\n                                    <li><a><span>Availibility</span> : ").concat(determineAvailability(n),'</a></li>\n                                    <li><a><span>Size</span> : </a></li\n                                    <li><div id="size" data-quantity="').concat(a[e].quantity,'"></div></li\n                                </ul>\n                                <p>').concat(a[e]["short-description"],"</p>")),document.getElementById("profile").insertAdjacentHTML("afterbegin","\n                                <p>".concat(a[e].description,"</p>")),document.getElementById("img").insertAdjacentHTML("afterbegin",'\n                                <div class="row justify-content-between">\n                                    <div class="col-sm-2" id="all-photo">\n                                        <div class="row m-bottom">\n                                            <img class="img-fluid img-thumbnail" src="img/product/'.concat(o,"/").concat(Object.entries(t)[1][1][0],'" alt="">\n                                        </div>\n                                        <div class="row m-bottom">\n                                            <img class="img-fluid img-thumbnail" src="img/product/').concat(o,"/").concat(Object.entries(t)[1][1][1],'" alt="">\n                                        </div>\n                                        <div class="row m-bottom">\n                                            <img class="img-fluid img-thumbnail" src="img/product/').concat(o,"/").concat(Object.entries(t)[1][1][2],'" alt="">\n                                        </div>\n                                    </div>\n\n                                    <div class="col-sm-10 container-fluid">\n                                        <img class="img-fluid img-thumbnail" id="photo-to-view" src="img/product/').concat(o,"/").concat(Object.entries(t)[1][1][0],'" alt="">\n                                    </div>\n                                </div>')),Object.entries(t)[4][1].forEach(function(t,e,a){document.getElementById("size").insertAdjacentHTML("beforeend","\n                                <div><span>".concat(a[e],"</span></div>"))}),transferDataProductToCart(t,o)}})},a=0,n=Object.entries(dataObj[t]);a<n.length;a++)e()}function selectedSize(){var r=document.getElementById("size");r.addEventListener("click",function(t){var e,a=_createForOfIteratorHelper(r.childNodes);try{for(a.s();!(e=a.n()).done;){var n=e.value;"DIV"===n.tagName&&n.classList.remove("selected")}}catch(t){a.e(t)}finally{a.f()}"DIV"===t.target.tagName?t.target.classList.add("selected"):"SPAN"===t.target.tagName&&t.target.parentNode.classList.add("selected")})}function localStorageGet(){localStorage.getItem("dataCart")&&JSON.parse(localStorage.getItem("dataCart"));var t=localStorage.getItem("dataCart");try{t=JSON.parse(t)}catch(t){return null}return t}var quantity=localStorageGet();function showQuantityGoodsInBasket(t){console.log(t),document.getElementById("show").innerHTML=t.length}function transferDataProductToCart(l,d,s){"0"!==document.getElementById("size").dataset.quantity?document.getElementById("add-cart").addEventListener("click",function(){var t={},e=localStorageGet(s)||[];for(var a in t.collection=d,l)"id"===a?t.id=l[a]:"name"===a?t.name=l[a]:"price"===a?t.price=l[a]:"photo"===a&&(t.photo=l[a][0]);var n=document.getElementsByClassName("qty");t.quantity=n[0].value;var r,o,i=_createForOfIteratorHelper(document.getElementById("size").childNodes);try{for(i.s();!(r=i.n()).done;){var c=r.value;"selected"===c.className&&(t.size=c.innerText)}}catch(t){i.e(t)}finally{i.f()}e.push(t),o=e,localStorage.setItem("dataCart",JSON.stringify(o))}):notAddToCart()}function defaultSelectedSize(){document.getElementById("size").children[0].classList.add("selected")}function viewPhoto(){document.getElementById("all-photo").addEventListener("click",function(t){var e=document.getElementById("photo-to-view"),a=t.target.getAttribute("src");e.setAttribute("src",a)})}function determineAvailability(t){return"0"===t?"Not available":"In stock"}function notAvailableStyle(){var t=document.getElementById("size");if("0"===t.dataset.quantity){var e,a=_createForOfIteratorHelper(t.children);try{for(a.s();!(e=a.n()).done;){var n=e.value;"DIV"===n.tagName&&n.classList.add("disabled")}}catch(t){a.e(t)}finally{a.f()}notAddToCart(),document.getElementById("qty").setAttribute("disabled",!0);var r,o=_createForOfIteratorHelper(document.getElementsByClassName("items-count"));try{for(o.s();!(r=o.n()).done;){r.value.classList.add("disabled")}}catch(t){o.e(t)}finally{o.f()}}}function notAddToCart(){var t=document.getElementById("add-cart");t.classList.add("disabled"),t.addEventListener("click",function(t){t.preventDefault()},!1)}showQuantityGoodsInBasket(quantity);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
