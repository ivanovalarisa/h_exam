"use strict";function _createForOfIteratorHelper(e){if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(e=_unsupportedIterableToArray(e))){var r=0,t=function(){};return{s:t,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:t}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n,a,o=!0,i=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return o=e.done,e},e:function(e){i=!0,a=e},f:function(){try{o||null==n.return||n.return()}finally{if(i)throw a}}}}function _unsupportedIterableToArray(e,r){if(e){if("string"==typeof e)return _arrayLikeToArray(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,r):void 0}}function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function catchClickOnArrow(){var e,r=_createForOfIteratorHelper(document.getElementsByClassName("items-count"));try{for(r.s();!(e=r.n()).done;){var t=e.value;t.classList.contains("disabled")||t.addEventListener("click",function(e){var r,t=e.target.parentNode;t.previousElementSibling&&"INPUT"===t.previousElementSibling.tagName?r=t.previousElementSibling:"INPUT"===t.nextElementSibling.tagName&&(r=t.nextElementSibling),hold(r,t)})}}catch(e){r.e(e)}finally{r.f()}}function incrementInputValue(e,r){var t=e.value;"number"!=typeof parseInt(t,10)||isNaN(parseInt(t,10))?e.value=1:0<parseInt(t,10)+r&&(e.value=parseInt(t,10)+r)}function hold(e,r){r.classList.contains("reduced")?incrementInputValue(e,-1):r.classList.contains("increase")&&incrementInputValue(e,1)}catchClickOnArrow();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFycm93cy5qcyJdLCJuYW1lcyI6WyJjYXRjaENsaWNrT25BcnJvdyIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJzIiwibiIsImRvbmUiLCJpdGVtIiwidmFsdWUiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiYXJyb3dQcmVzc2VkIiwidGFyZ2V0IiwicGFyZW50Tm9kZSIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJ0YWdOYW1lIiwiaW5wdCIsIm5leHRFbGVtZW50U2libGluZyIsImhvbGQiLCJlcnIiLCJmIiwiaW5jcmVtZW50SW5wdXRWYWx1ZSIsInZhbCIsInBhcnNlSW50IiwiaW5jcmVtZW50Il0sIm1hcHBpbmdzIjoiQUFBQSxpbUNBRUEsU0FBU0Esb0JBQ0wsSUFEeUJDLEVBQUFDLEVBQUFDLDJCQUNaQyxTQUFTQyx1QkFBdUIsZ0JBRHBCLElBRXpCLElBQUFILEVBQUFJLE1BQUFMLEVBQUFDLEVBQUFLLEtBQUFDLE1BQXdCLENBQUEsSUFBaEJDLEVBQWdCUixFQUFBUyxNQUNoQkQsRUFBS0UsVUFBVUMsU0FBUyxhQUN4QkgsRUFBS0ksaUJBQWlCLFFBQVMsU0FBVUMsR0FDckMsSUFMUGQsRUFLV2UsRUFBZUQsRUFBRUUsT0FBT0MsV0FKM0JiLEVBQVNDLHdCQUF0QixVQUE2Q1UsRUFBN0NHLHVCQUFBQyxRQUR5QkMsRUFBQUwsRUFBQUcsdUJBQUEsVUFBQUgsRUFBQU0sbUJBQUFGLFVBQUFDLEVBQUFMLEVBQUFNLG9CQUVEQyxLQUFBRixFQUFBTCxNQUZDLE1BQUFRLEdBQUFyQixFQUFBWSxFQUFBUyxHQUFBLFFBQUFyQixFQUFBc0IsS0FPYixTQUFBQyxvQkFBZ0JQLEVBQUFBLEdBQ1osSUFBQVEsRUFBQU4sRUFBQVYsTUFDb0JRLGlCQUFwQkUsU0FBT0wsRUFBQUEsS0FBYUcsTUFBcEJTLFNBQUFELEVBQUEsS0FtQlpOLEVBQUtWLE1BQVEsRUFsQmtCVyxFQUh2Qk0sU0FHVVosRUFBQUEsSUFBQUEsSUFDTkssRUFBQVYsTUFBQWlCLFNBQUFELEVBQUEsSUFBQUUsR0FNZixTQUFBTixLQUFBRixFQUFBSixHQWpCd0JBLEVBQUFMLFVBQUFDLFNBQUEsV0FBQWEsb0JBQUFMLEdBQUEsR0FBQUosRUFBQUwsVUFBQUMsU0FBQSxhQXVDckJhLG9CQUFvQkwsRUFyQjNCLEdBWmVwQiIsImZpbGUiOiJhcnJvd3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5mdW5jdGlvbiBjYXRjaENsaWNrT25BcnJvdygpIHtcclxuICAgIGxldCBhcnJvd3MgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdpdGVtcy1jb3VudCcpO1xyXG4gICAgZm9yKGxldCBpdGVtIG9mIGFycm93cykge1xyXG4gICAgICAgIGlmKCFpdGVtLmNsYXNzTGlzdC5jb250YWlucygnZGlzYWJsZWQnKSkge1xyXG4gICAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGxldCBhcnJvd1ByZXNzZWQgPSBlLnRhcmdldC5wYXJlbnROb2RlO1xyXG4gICAgICAgICAgICAgICAgbGV0IGlucHQ7XHJcbiAgICAgICAgICAgICAgICBpZihhcnJvd1ByZXNzZWQucHJldmlvdXNFbGVtZW50U2libGluZyAmJiBhcnJvd1ByZXNzZWQucHJldmlvdXNFbGVtZW50U2libGluZy50YWdOYW1lID09PSAnSU5QVVQnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZGVidWdnZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdCA9IGFycm93UHJlc3NlZC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmKGFycm93UHJlc3NlZC5uZXh0RWxlbWVudFNpYmxpbmcudGFnTmFtZSA9PT0gJ0lOUFVUJyl7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gZGVidWdnZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5wdCA9IGFycm93UHJlc3NlZC5uZXh0RWxlbWVudFNpYmxpbmc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBob2xkKGlucHQsIGFycm93UHJlc3NlZCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5jYXRjaENsaWNrT25BcnJvdygpO1xyXG5cclxuZnVuY3Rpb24gaW5jcmVtZW50SW5wdXRWYWx1ZShpbnB0LCBpbmNyZW1lbnQpIHtcclxuICAgIGNvbnN0IHZhbCA9IGlucHQudmFsdWU7XHJcbiAgICBpZiAodHlwZW9mIHBhcnNlSW50KHZhbCwgMTApID09PSBcIm51bWJlclwiICYmICFpc05hTihwYXJzZUludCh2YWwsIDEwKSkpIHtcclxuICAgICAgICBpZiAocGFyc2VJbnQodmFsLCAxMCkgKyBpbmNyZW1lbnQgPiAwKSB7XHJcbiAgICAgICAgICAgIGlucHQudmFsdWUgPSBwYXJzZUludCh2YWwsIDEwKSArIGluY3JlbWVudDtcclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlucHQudmFsdWUgPSAxO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBob2xkKGlucHQsIHRhcmdldCkge1xyXG4gICAgbGV0IGluY3JlbWVudCA9IDA7XHJcbiAgICBpZiAodGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncmVkdWNlZCcpKSB7XHJcbiAgICAgICAgaW5jcmVtZW50ID0gLTE7XHJcbiAgICAgICAgaW5jcmVtZW50SW5wdXRWYWx1ZShpbnB0LCBpbmNyZW1lbnQpO1xyXG4gICAgfSBlbHNlIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdpbmNyZWFzZScpKSB7XHJcbiAgICAgICAgaW5jcmVtZW50ID0gMTtcclxuICAgICAgICBpbmNyZW1lbnRJbnB1dFZhbHVlKGlucHQsIGluY3JlbWVudCk7XHJcbiAgICB9XHJcbn0iXX0=
