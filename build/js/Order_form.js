"use strict";function getStringObjAndPars(){var t=localStorage.getItem("dataCart");showOrderTab(JSON.parse(t))}function showOrderTab(t){var e,n=document.getElementById("orderTab"),a=document.createElement("div");a.setAttribute("class","order_box"),a.insertAdjacentHTML("afterbegin",'\n                          <h2>Your Order</h2>\n                          <ul class="list">\n                              '.concat((e=' <table class="table table-sm">\n                          <thead>\n                            <tr>\n                              <th scope="col">Name</th>\n                              <th scope="col">Collection</th>\n                              <th scope="col">Size</th>\n                              <th scope="col">Price</th>\n                              <th scope="col">Count</th>\n                            </tr>\n                          </thead>\n                          <tbody>',t.forEach(function(t){e+="<tr>\n                          <td>".concat(t.name,"</td>\n                          <td>").concat(t.collection,"</td>\n                          <td>").concat(t.size,"</td>\n                          <td>").concat(t.price,"</td>\n                          <td>").concat(t.quantity,"</td>\n                        </tr>")}),e+=" </tbody></table>"),'\n                          </ul>\n                          <ul class="list `list_2`">\n                          ').concat(orderHeard(t),'\n                          </ul>\n                          <div id="checkLine" class="last">Check if all fields are entered correctly</div>\n                          <div class="text-center">\n                              <a id="btnConfirm" class="button button-paypal" href="#">Confirm</a>\n                          </div>\n                            ')),n.appendChild(a),showOrderFormInput(t)}function orderHeard(t){var a=0;return t.forEach(function(t){var e=Number.parseInt(t.price),n=Number.parseInt(t.quantity);a+=n*e,0}),'<li><a href="#">Subtotal <span>$'.concat(a.toFixed(2),'</span></a></li>\n                <li><a href="#">Shipping <span>$').concat((0).toFixed(2),'</span></a></li>\n                <li><a href="#">Total <span>$').concat((a+0).toFixed(2),"</span></a></li>")}function showOrderFormInput(v){var p={2:"Kiev",3:"Kharkov",4:"Odessa",5:"Lugansk",6:"Donetsk",7:"Krivoy Rog",8:"Nikolaev"};function b(t,e){return t?e.classList.remove("errorTextInvisible"):e.classList.add("errorTextInvisible"),!t}document.getElementById("btnConfirm").addEventListener("click",function(){var t=!0,e=document.forms.orderForm,n=e.elements.firstName.value,a=document.getElementById("errorTextFirstName");b(null===n.match(/^['A-Za-z\u0410-\u044F]['\x2DA-Za-z\u0410-\u044F]+['A-Za-z\u0410-\u044F]?$/),a)||(t=!1);var o=e.elements.lastName.value,c=document.getElementById("errorTextLastName");b(null===o.match(/^['A-Za-z\u0410-\u044F]['\x2DA-Za-z\u0410-\u044F]+['A-Za-z\u0410-\u044F]?$/),c)||(t=!1);var r=e.elements.number.value,s=document.getElementById("errorTextPhoneNumber");b(null===r.match(/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$/),s)||(t=!1);var l=e.elements.email.value,d=document.getElementById("errorTextEmail");b(null===l.match(/^\w{1,20}[@]?[a-z]{1,6}[.]?[a-z]{1,5}$/),d)||(t=!1);var i=e.elements.citySelect.value;console.log(i),b("1"===i,document.getElementById("errorTextCity"))||(t=!1);var u=p[i];console.log(u);var m=e.elements.newPostOffice.value,h=document.getElementById("errorTextPostOffice");b(null===m.match(/[№]?[0-9]{1,4}/g),h)||(t=!1);e.elements.message.value;showOrderResult(n,o,r,l,u,m,v,t)})}function showOrderResult(t,e,n,a,o,c,r,s){if(s){var l=document.getElementById("orderResult"),d=document.getElementById("orderNumber"),i=$("#resultModal").on("hidden.bs.modal",function(){localStorage.removeItem("dataCart"),document.location.href="/"});d.innerText="12345";var u='<h5>Сustomer information: </h5>\n                        <div class="col-"> <span class="captionOrderResult">First name: </span> '.concat(t,'</div>\n                        <div class="col-"> <span class="captionOrderResult">Last name: </span>').concat(e,'</div>\n                        <div class="col-"> <span class="captionOrderResult">Phone: </span>').concat(n,'</div>\n                        <div class="col-"> <span class="captionOrderResult">mail: </span>').concat(a,'</div>\n                        <div class="col-"> <span class="captionOrderResult">City: </span>').concat(o,'</div>\n                        <div class="col-"> <span class="captionOrderResult">Post number: </span>').concat(c,'</div>\n                        <div class="col-"> </div>\n                        <div class="col-"> <table class="table table-sm">\n                          <thead>\n                            <tr>\n                              <th scope="col">Name</th>\n                              <th scope="col">Collection</th>\n                              <th scope="col">Size</th>\n                              <th scope="col">Price</th>\n                              <th scope="col">Count</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                          <h5 class="headlineOrderResult">Product information: </h5>');r.forEach(function(t){u+='\n                        <tr>\n                          <th scope="row">'.concat(t.name,"</th>\n                          <td>").concat(t.collection,"</td>\n                          <td>").concat(t.size,"</td>\n                          <td>").concat(t.price,"</td>\n                          <td>").concat(t.quantity,"</td>\n                        </tr>")}),u+='</tbody></table></div>\n                    <ul class="list `list_2`">\n                         '.concat(orderHeard(r),'\n                    </ul>\n                    <div class="col-">Our manager will phone you as soon as possible. Best regards</div>'),l.innerHTML=u,i.modal("show")}}getStringObjAndPars();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
